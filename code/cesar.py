# === TP2 de Cryptographie - EFREI ===
# Auteur : Yassine Gouja
# Sujet : Chiffrement de C√©sar + Encodage Base64 avec d√©chiffrement

import base64

# Fonction de chiffrement ou d√©chiffrement de C√©sar
def cesar(message, cle, mode='chiffrement'):
    resultat = ""  # Cha√Æne r√©sultat √† retourner
    decalage = len(cle)  # Le d√©calage est d√©termin√© par la longueur de la cl√©

    for char in message:
        if char.isalpha():  # V√©rifie si le caract√®re est une lettre
            base = ord('A') if char.isupper() else ord('a')  # Majuscule ou minuscule

            if mode == 'chiffrement':
                code = (ord(char) - base + decalage) % 26 + base  # Application du d√©calage
            elif mode == 'dechiffrement':
                code = (ord(char) - base - decalage) % 26 + base  # D√©calage inverse
            else:
                raise ValueError("Mode inconnu. Utilise 'chiffrement' ou 'dechiffrement'.")

            resultat += chr(code)  # Ajoute le caract√®re transform√© au r√©sultat
        else:
            resultat += char  # Garde les caract√®res non alphab√©tiques inchang√©s

    return resultat  # Retourne le message transform√©

# Fonction principale
def main():
    print("=== Chiffrement C√©sar + Base64 ===")

    # Demande √† l'utilisateur s'il souhaite chiffrer ou d√©chiffrer
    choix = input("Voulez-vous (C)hiffrer ou (D)√©chiffrer ? ").strip().upper()

    if choix == 'C':
        # CHIFFREMENT
        message = input("Entrez le message √† chiffrer : ")  # Message brut
        cle = input("Entrez la cl√© (ex: ABC) : ")  # Cl√© utilis√©e pour d√©caler

        chiffre = cesar(message, cle, mode='chiffrement')  # Chiffrement C√©sar
        encodage = base64.b64encode(chiffre.encode()).decode()  # Encodage en base64

        print("\nüîê Message chiffr√© + encod√© :", encodage)

    elif choix == 'D':
        # D√âCHIFFREMENT
        message = input("Entrez le message encod√© √† d√©coder : ")
        cle = input("Entrez la cl√© : ")

        try:
            decode = base64.b64decode(message).decode()  # D√©codage base64
        except Exception as e:
            print("‚ùå Erreur de d√©codage base64 :", e)
            return

        dechiffre = cesar(decode, cle, mode='dechiffrement')  # D√©chiffrement C√©sar
        print("\nüìÇ Message d√©cod√© + d√©chiffr√© :", dechiffre)

    else:
        print("Choix invalide. Tapez 'C' ou 'D'.")

# Ex√©cution du programme si ce fichier est ex√©cut√© directement
if __name__ == "__main__":
    main()
